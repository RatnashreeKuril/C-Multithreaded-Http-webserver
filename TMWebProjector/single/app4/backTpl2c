#include<tmwp>
#include<stdio.h>
#include<string.h>
using namespace tmwp;
int main()
{
long fileLength;
int i,rc,e,x,f,si,dc;
char a[1025];
char responseBuffer[1025];
char key[51];
FILE * file=fopen("xyz.tpl","rb");
FILE * tmpFile=fopen("xyz.tpl.cpp","wb");
strcpy(a,"#include<iostream>\n");
strcat(a,"using namespace std\n");
strcat(a,"void getErrorPage_TPL(Request & request, Response & response)\n");
strcat(a,"{\n");
fwrite(a,strlen(a),1,tmpFile);
fseek(file,0,2);
fileLength=ftell(file);
printf("File length : %d\n",fileLength);
fseek(file,0,0);
i=0;
e=0;
x=0;
dc=0;
while(i<fileLength)
{
rc=fileLength-i;
if(rc>1024) rc=1024;
fread(&responseBuffer, rc, 1, file);
responseBuffer[rc+1]='\0';
printf("**********************************************************************************\n");
printf("Response Buffer : %s\n",responseBuffer);
printf("**********************************************************************************\n");
while(x<rc)
{
f=0;
while(responseBuffer[e]!='\n' && responseBuffer[e]!='\0')
{
if(responseBuffer[e]=='$')
{
si=e;
dc++;
e++;
while(responseBuffer[e]=='$')
{
dc++;
e++;
}
}
else
{
a[f]=responseBuffer[e];
f++;
e++;
}
}
if(dc==3 && responseBuffer[e]!='\0')
{

}
if(dc==3 && responseBuffer[e]=='\0')
{
break;
}
if(dc<3 && dc>0 && responseBuffer[e]=='\0')
{
break;
}
a[f]='\n';
a[f+1]='\0';
printf("%s\n",a);
fwrite(a,strlen(a),1,tmpFile);
e++;
x=e;
}
if(dc==3 && responseBuffer[e]=='\0')
{

}
if(dc<3 && dc>0 && responseBuffer[e]=='\0')
{
strncpy(a,responseBuffer,si);
a[si+1]='\0';
i+=rc;
continue;
}
i+=rc;
}
strcpy(a,"}\n");
fwrite(a,strlen(a),1,tmpFile);
fclose(file);
fclose(tmpFile);
printf("File generated\n");
return 0;
}